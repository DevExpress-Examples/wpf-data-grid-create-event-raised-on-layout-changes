Imports System
Imports System.Windows
Imports System.ComponentModel
Imports System.Collections.Generic
Imports DevExpress.Xpf.Grid
Imports DevExpress.Mvvm.UI.Interactivity

Namespace GridLayoutHelper

    Public Class GridLayoutHelper
        Inherits Behavior(Of GridControl)

        Public Event LayoutChanged As EventHandler(Of GridLayoutHelper.MyEventArgs)

        Private LayoutChangedTypes As List(Of GridLayoutHelper.LayoutChangedType) = New List(Of GridLayoutHelper.LayoutChangedType)()

        Private ReadOnly Property Grid As GridControl
            Get
                Return AssociatedObject
            End Get
        End Property

        Private IsLocked As Boolean

'#Region "DependencyPropertyDescriptors"
        Private ReadOnly Property ActualWidthDescriptor As DependencyPropertyDescriptor
            Get
                Return DependencyPropertyDescriptor.FromProperty(BaseColumn.ActualHeaderWidthProperty, GetType(GridColumn))
            End Get
        End Property

        Private ReadOnly Property VisibleIndexDescriptor As DependencyPropertyDescriptor
            Get
                Return DependencyPropertyDescriptor.FromProperty(BaseColumn.VisibleIndexProperty, GetType(GridColumn))
            End Get
        End Property

        Private ReadOnly Property GroupIndexDescriptor As DependencyPropertyDescriptor
            Get
                Return DependencyPropertyDescriptor.FromProperty(GridColumn.GroupIndexProperty, GetType(GridColumn))
            End Get
        End Property

        Private ReadOnly Property VisibleDescriptor As DependencyPropertyDescriptor
            Get
                Return DependencyPropertyDescriptor.FromProperty(BaseColumn.VisibleProperty, GetType(GridColumn))
            End Get
        End Property

'#End Region
        Protected Overrides Sub OnAttached()
            MyBase.OnAttached()
            If Grid.Columns IsNot Nothing Then
                SubscribeColumns()
            Else
                AddHandler Grid.Loaded, AddressOf OnGridLoaded
            End If

            AddHandler Grid.FilterChanged, AddressOf OnGridFilterChanged
            AddHandler Grid.AutoGeneratedColumns, AddressOf OnGridColumnsPopulated
        End Sub

        Protected Overrides Sub OnDetaching()
            UnSubscribeColumns()
            RemoveHandler Grid.Loaded, AddressOf OnGridLoaded
            RemoveHandler Grid.FilterChanged, AddressOf OnGridFilterChanged
            RemoveHandler Grid.AutoGeneratedColumns, AddressOf OnGridColumnsPopulated
            MyBase.OnDetaching()
        End Sub

        Private Sub SubscribeColumns()
            AddHandler Grid.Columns.CollectionChanged, AddressOf ColumnsCollectionChanged
            For Each column As GridColumn In Grid.Columns
                SubscribeColumn(column)
            Next
        End Sub

        Private Sub UnSubscribeColumns()
            RemoveHandler Grid.Columns.CollectionChanged, AddressOf ColumnsCollectionChanged
            For Each column As GridColumn In Grid.Columns
                UnSubscribeColumn(column)
            Next
        End Sub

        Private Sub SubscribeColumn(ByVal column As GridColumn)
            ActualWidthDescriptor.AddValueChanged(column, New EventHandler(AddressOf OnColumnWidthChanged))
            VisibleIndexDescriptor.AddValueChanged(column, New EventHandler(AddressOf OnColumnVisibleIndexChanged))
            GroupIndexDescriptor.AddValueChanged(column, New EventHandler(AddressOf OnColumnGroupIndexChanged))
            VisibleDescriptor.AddValueChanged(column, New EventHandler(AddressOf OnColumnVisibleChanged))
        End Sub

        Private Sub UnSubscribeColumn(ByVal column As GridColumn)
            ActualWidthDescriptor.RemoveValueChanged(column, New EventHandler(AddressOf OnColumnVisibleIndexChanged))
            VisibleIndexDescriptor.RemoveValueChanged(column, New EventHandler(AddressOf OnColumnVisibleIndexChanged))
            GroupIndexDescriptor.RemoveValueChanged(column, New EventHandler(AddressOf OnColumnGroupIndexChanged))
            VisibleDescriptor.RemoveValueChanged(column, New EventHandler(AddressOf OnColumnVisibleChanged))
        End Sub

        Private Sub ProcessLayoutChanging(ByVal type As GridLayoutHelper.LayoutChangedType)
            If Not LayoutChangedTypes.Contains(type) Then LayoutChangedTypes.Add(type)
            If IsLocked Then Return
            IsLocked = True
            Dispatcher.BeginInvoke(New Action(Sub()
                IsLocked = False
                RaiseEvent LayoutChanged(Me, New GridLayoutHelper.MyEventArgs With {.LayoutChangedTypes = LayoutChangedTypes})
                LayoutChangedTypes.Clear()
            End Sub))
        End Sub

        Private Sub OnGridLoaded(ByVal sender As Object, ByVal e As RoutedEventArgs)
            SubscribeColumns()
            AddHandler Grid.Columns.CollectionChanged, AddressOf ColumnsCollectionChanged
        End Sub

        Private Sub OnGridColumnsPopulated(ByVal sender As Object, ByVal e As RoutedEventArgs)
            Me.ProcessLayoutChanging(GridLayoutHelper.LayoutChangedType.ColumnsCollection)
            SubscribeColumns()
        End Sub

        Private Sub ColumnsCollectionChanged(ByVal sender As Object, ByVal e As Collections.Specialized.NotifyCollectionChangedEventArgs)
            If e.NewItems IsNot Nothing OrElse e.OldItems IsNot Nothing Then
                Me.ProcessLayoutChanging(GridLayoutHelper.LayoutChangedType.ColumnsCollection)
            End If

            If e.OldItems IsNot Nothing Then
                For Each column As GridColumn In e.OldItems
                    UnSubscribeColumn(column)
                Next
            End If

            If e.NewItems IsNot Nothing Then
                For Each column As GridColumn In e.NewItems
                    SubscribeColumn(column)
                Next
            End If
        End Sub

        Private Sub OnGridFilterChanged(ByVal sender As Object, ByVal e As RoutedEventArgs)
            Me.ProcessLayoutChanging(GridLayoutHelper.LayoutChangedType.FilerChanged)
        End Sub

        Private Sub OnColumnWidthChanged(ByVal sender As Object, ByVal args As EventArgs)
            Me.ProcessLayoutChanging(GridLayoutHelper.LayoutChangedType.ColumnWidth)
        End Sub

        Private Sub OnColumnVisibleIndexChanged(ByVal sender As Object, ByVal args As EventArgs)
            Me.ProcessLayoutChanging(GridLayoutHelper.LayoutChangedType.ColumnVisibleIndex)
        End Sub

        Private Sub OnColumnGroupIndexChanged(ByVal sender As Object, ByVal args As EventArgs)
            Me.ProcessLayoutChanging(GridLayoutHelper.LayoutChangedType.ColumnGroupIndex)
        End Sub

        Private Sub OnColumnVisibleChanged(ByVal sender As Object, ByVal args As EventArgs)
            Me.ProcessLayoutChanging(GridLayoutHelper.LayoutChangedType.ColumnVisible)
        End Sub
    End Class

    Public Class MyEventArgs
        Inherits EventArgs

        Public Property LayoutChangedTypes As List(Of GridLayoutHelper.LayoutChangedType)
    End Class

    Public Enum LayoutChangedType
        ColumnsCollection
        FilerChanged
        ColumnGroupIndex
        ColumnVisibleIndex
        ColumnWidth
        ColumnVisible
        None
    End Enum
End Namespace
